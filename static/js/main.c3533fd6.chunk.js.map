{"version":3,"sources":["components/ExpenseForm.js","components/ExpenseItem.js","components/ExpenseList.js","components/Alert.js","App.js","serviceWorker.js","index.js"],"names":["ExpenseForm","charge","amount","handleCharge","handleAmount","handleSubmit","edit","onSubmit","className","htmlFor","type","id","name","value","onChange","ExpenseItem","expense","handleDelete","handleEdit","aria-label","onClick","ExpenseList","expenses","clearItems","map","key","length","Alert","text","initialExpenses","localStorage","getItem","JSON","parse","App","useState","setExpenses","setCharge","setAmount","show","alert","setAlert","setEdit","setId","useEffect","setItem","stringify","handleAlert","setTimeout","e","preventDefault","tempExpenses","item","singleExpense","uuid","target","parseInt","filter","find","reduce","acc","curr","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c3533fd6.chunk.js","sourcesContent":["import React from \"react\";\nimport { MdSend } from \"react-icons/md\";\nconst ExpenseForm = ({\n  charge,\n  amount,\n  handleCharge,\n  handleAmount,\n  handleSubmit,\n  edit\n}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-center\">\n        <div className=\"form-group\">\n          <label htmlFor=\"expense\">DEPENSE</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"charge\"\n            name=\"charge\"\n            value={charge}\n            onChange={handleCharge}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">MONTANT</label>\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            id=\"amount\"\n            name=\"amount\"\n            value={amount}\n            onChange={handleAmount}\n          />\n        </div>\n      </div>\n      <button type=\"submit\" className=\"btn\">\n        {edit ? \"edit\" : \"submit\"}\n        {/* submit  */}\n        <MdSend className=\"btn-icon\" />\n      </button>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React from \"react\";\nimport { MdEdit, MdDelete } from \"react-icons/md\";\nconst ExpenseItem = ({\n  expense: { id, charge, amount },\n  handleDelete,\n  handleEdit\n}) => {\n  return (\n    <li className=\"item\">\n      <div className=\"info\">\n        <span className=\"expense\">{charge}</span>\n        <span className=\"amount\">${amount}</span>\n      </div>\n      <div>\n        <button\n          className=\"edit-btn\"\n          aria-label=\"edit button\"\n          onClick={() => handleEdit(id)}\n        >\n          <MdEdit />\n        </button>\n        <button\n          className=\"clear-btn\"\n          aria-label=\"delete button\"\n          onClick={() => handleDelete(id)}\n        >\n          <MdDelete />\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport { MdDelete } from \"react-icons/md\";\nconst ExpenseList = ({ expenses, handleDelete, handleEdit, clearItems }) => {\n  return (\n    <>\n      <ul className=\"list\">\n        {expenses.map(expense => {\n          return (\n            <ExpenseItem\n              key={expense.id}\n              expense={expense}\n              handleDelete={handleDelete}\n              handleEdit={handleEdit}\n            />\n          );\n        })}\n      </ul>\n      {expenses.length > 0 && (\n        <button className=\"btn\" onClick={clearItems}>\n          clear expenses\n          <MdDelete className=\"btn-icon\" />\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default ExpenseList;\n","import React from \"react\";\n\nconst Alert = ({ type, text }) => {\n  return <div className={`alert alert-${type}`}>{text}</div>;\n};\n\nexport default Alert;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ExpenseForm from \"./components/ExpenseForm\";\nimport ExpenseList from \"./components/ExpenseList\";\nimport Alert from \"./components/Alert\";\nimport uuid from \"uuid/v4\";\n\nconst initialExpenses = localStorage.getItem(\"expenses\")\n  ? JSON.parse(localStorage.getItem(\"expenses\"))\n  : [];\nfunction App() {\n  const [expenses, setExpenses] = useState(initialExpenses);\n  const [charge, setCharge] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [alert, setAlert] = useState({ show: false });\n  const [edit, setEdit] = useState(false);\n  const [id, setId] = useState(0);\n  useEffect(() => {\n\n    localStorage.setItem(\"expenses\", JSON.stringify(expenses));\n  }, [expenses]);\n\n  const handleCharge = e => {\n    setCharge(e.target.value);\n  };\n \n  const handleAmount = e => {\n    let amount = e.target.value;\n    if (amount === \"\") {\n      setAmount(amount);\n    } else {\n      setAmount(parseInt(amount));\n    }\n  };\n\n \n  const handleAlert = ({ type, text }) => {\n    setAlert({ show: true, type, text });\n    setTimeout(() => {\n      setAlert({ show: false });\n    }, 3000);\n  };\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n    if (charge !== \"\" && amount > 0) {\n      if (edit) {\n        let tempExpenses = expenses.map(item => {\n          return item.id === id ? { ...item, charge, amount } : item;\n        });\n        setExpenses(tempExpenses);\n        setEdit(false);\n      } else {\n        const singleExpense = { id: uuid(), charge, amount };\n        setExpenses([...expenses, singleExpense]);\n        handleAlert({ type: \"success\", text: \"item added\" });\n      }\n      \n      setCharge(\"\");\n     \n      setAmount(\"\");\n    } else {\n      handleAlert({\n        type: \"danger\",\n        text: `Le formulaire est incomplet`\n      });\n    }\n  };\n\n  const handleDelete = id => {\n    let tempExpenses = expenses.filter(item => item.id !== id);\n    setExpenses(tempExpenses);\n    handleAlert({ type: \"danger\", text: \"Dépenses supprimées\" });\n  };\n \n  const clearItems = () => {\n    setExpenses([]);\n  };\n \n  const handleEdit = id => {\n    let expense = expenses.find(item => item.id === id);\n    let { charge, amount } = expense;\n    setCharge(charge);\n    setAmount(amount);\n    setEdit(true);\n    setId(id);\n  };\n\n  return (\n    <>\n      {alert.show && <Alert type={alert.type} text={alert.text} />}\n      <h1>CALCULATEUR DE DEPENSES</h1>\n      <main className=\"App\">\n        <ExpenseForm\n          handleSubmit={handleSubmit}\n          charge={charge}\n          handleCharge={handleCharge}\n          amount={amount}\n          handleAmount={handleAmount}\n          edit={edit}\n        />\n        <ExpenseList\n          expenses={expenses}\n          handleDelete={handleDelete}\n          handleEdit={handleEdit}\n          clearItems={clearItems}\n        />\n      </main>\n      <h1>\n        TOTAL :\n        <span className=\"total\">\n          $\n          {expenses.reduce((acc, curr) => {\n            return (acc += curr.amount);\n          }, 0)}\n        </span>\n      </h1>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}